"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const x=require("solid-js/web"),l=require("solid-js"),y=require("solid-js/store"),d=require("@apollo/client/core/index.js"),v=l.createContext(),O=r=>x.createComponent(v.Provider,{get value(){return r.client},get children(){return r.children}}),w=()=>{const r=l.useContext(v);if(!r)throw new Error("apolloClient could not be found in context. Did you wrap your Component with <ApolloProvider client={...} /> ?");return r},S=(r,e={})=>{const f=w(),i=()=>{if(typeof e!="function")return e.skip&&console.warn(`you passed options.skip to createQuery, but the options are not an acccessor.
This query will never execute!

Replace your options with a function.`),e;const n=typeof e=="function"?e():e;return n.skip?!1:n},[o]=l.createResource(i,n=>{const a=f.watchQuery({query:r,...n}),[b,s]=y.createStore({});let c=!1;return new Promise((u,t)=>{const p=a.subscribe({error:t,next:({data:C,error:m})=>{m&&t(m),c?s(y.reconcile(C)):(c=!0,s(C),u(b))}});l.onCleanup(()=>p.unsubscribe())})});return o},A=(r,e={})=>{const f=w();let i=null,o=null;const[n,a]=l.createSignal(!1),[b]=l.createResource(n,async s=>{let c;try{c=await f.mutate(s)}catch(p){throw o&&(o(p),o=null),p}const{data:u,errors:t}=c;if(t)throw o&&(o(t[0]),o=null),t[0];return i&&(i(u),i=null),u});return[async(s={})=>{const c=d.mergeOptions(s,{mutation:r,...typeof e=="function"?l.untrack(e):e});return a(c),new Promise((u,t)=>{i=u,o=t})},b]},R=(r,e={})=>{const f=w(),[i]=l.createResource(e,o=>{const n=f.subscribe({query:r,...o}),[a,b]=y.createStore({});let s=!1;return new Promise((c,u)=>{const t=n.subscribe({error:u,next:({data:p})=>{s?b(y.reconcile(p)):(s=!0,b(p),c(a))}});l.onCleanup(()=>t.unsubscribe())})});return i},q=(r,e={})=>{const f=w(),[i,o]=l.createSignal(!1);let n=null,a=null;const[b]=l.createResource(i,s=>{const c=f.watchQuery({query:r,...s}),[u,t]=y.createStore({});let p=!1;return new Promise((C,m)=>{const h=c.subscribe({error:m,next:({data:P,error:g})=>{g&&(a&&(a(g),a=null),m(g)),p?t(y.reconcile(P)):(p=!0,n&&(n(P),n=null),t(P),C(u))}});l.onCleanup(()=>h.unsubscribe())})});return[async(s={})=>{const c=d.mergeOptions(s,{query:r,...typeof e=="function"?l.untrack(e):e});return o(c),new Promise((u,t)=>{n=u,a=t})},b]};Object.defineProperty(exports,"ApolloClient",{enumerable:!0,get:()=>d.ApolloClient});Object.defineProperty(exports,"InMemoryCache",{enumerable:!0,get:()=>d.InMemoryCache});Object.defineProperty(exports,"gql",{enumerable:!0,get:()=>d.gql});exports.ApolloProvider=O;exports.createLazyQuery=q;exports.createMutation=A;exports.createQuery=S;exports.createSubscription=R;exports.useApollo=w;
